Keying Liang
10. The list below is partially ordered by insertion sort up until 5. How many comparisons and swaps are needed to sort the 5? [1 3 4 8 9 5 2]
Ans:
[1 3 4 8 5 9 2]
[1 3 4 5 8 9 2]
We need 3 comparisons and 2 swaps to sort the 5.

[1 3 4 5 8 2 9]
[1 3 4 5 2 8 9]
[1 3 4 2 5 8 9]
(6 comparisons and 5 swaps if we want the 5 to be in the right index (index 4).)

11. Which method runs faster for each of the following items, selection sort or insertion sort? a) array with all keys identical
Ans: Insertion sort runs faster. The algorithm is stable, it won’t change the the relative order of elements with equal keys. In this case it will only go through the array once. The runtime of insertion sort will be O(N).
Selection sort is a quadratic algorithm, it runs in O(n2) regardless of the input structure.
b) sorted array
Ans: Insertion sort is faster. Insertion sort will visit O(n) elements for a total runtime of O(n), linear runtime.
Selection sort runs in O(n^2),quadratic runtime, regardless of the input structure.
c) array in reverse order
Ans: Both algorithms have quadratic runtime in worst case.
